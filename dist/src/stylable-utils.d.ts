import * as postcss from 'postcss';
import { Diagnostics } from './diagnostics';
import { Imported, SRule, StylableMeta } from './stylable-processor';
export declare const CUSTOM_SELECTOR_RE: RegExp;
export declare function isValidDeclaration(decl: postcss.Declaration): boolean;
export declare function transformMatchesOnRule(rule: postcss.Rule, lineBreak: boolean): any;
export declare function mergeRules(mixinRoot: postcss.Root, rule: SRule, diagnostics: Diagnostics): SRule;
export declare function createClassSubsetRoot(root: postcss.Root, selectorPrefix: string): postcss.Root;
export declare function removeUnusedRules(ast: postcss.Root, meta: StylableMeta, _import: Imported, usedFiles: string[], resolvePath: (ctx: string, path: string) => string): void;
export declare function findDeclaration(importNode: Imported, test: any): postcss.Declaration;
export declare function findRule(root: postcss.Root, selector: string, test?: any): any;
export declare const reservedKeyFrames: string[];
